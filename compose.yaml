services:

  postgres:
    container_name: postgres
    image: postgres:14.3-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app
    networks:
      - net
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d app" ]
      interval: 5s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  datagen:
    container_name: datagen
    build:
      context: ./
      dockerfile: deploy/dg.Dockerfile
    environment:
      DB_URL: 'postgresql://postgres:postgres@postgres/app'
    depends_on:
      app:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - net

  app:
    container_name: app
    build:
      context: ./
      dockerfile: deploy/Dockerfile
    ports:
      - 8000:8000
    environment:
      DB_URL: 'postgresql://postgres:postgres@postgres/app'
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/status/" ]
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - net


networks:
  net:
